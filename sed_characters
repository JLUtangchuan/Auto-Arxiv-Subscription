# =============================================================================
#          file: /mnt/Vancouver/programming/scripts/sed_characters
#       version: 02
# last modified: 2020-01-14
# =============================================================================

# coding: utf-8

# usage:
#   sed -f sed_characters <input_file_to_be_processed>
# in place:
#   sed -i <file> -f sed_characters

# IF NEEDED, USE '\b...\b' TO MATCH WHOLE WORDS!
# https://stackoverflow.com/questions/1032023/sed-whole-word-search-and-replace
#
# sed: http://www.grymoire.com/Unix/Sed.html
# http://unix.stackexchange.com/questions/95939/how-exactly-do-i-create-a-sed-script-and-use-it-to-edit-a-file

# ----------------------------------------
# COMMON MISSPELLINGS:

s/ teh / the /g

# ----------------------------------------
# STRING ANNOYANCES

s/View ORCID Profile//g
s/ | Download Citation//g

# ----------------------------------------
# CHARACTER ANNOYANCES: 'SMART' APOSTROPHES; LIGATURES ...

s/´/'/g
s/’/'/g
s/‘/'/g
s/′/'/g
s/“/"/g
s/ˮ/"/g
s/‟/"/g
s/“/"/g
s/”/"/g
s/ﬃ/ffi/g
s/ﬁ/fi/g
s/ﬀ/ff/g
s/ﬂ/fl/g
s/ﬄ/ffl/g
s/␮/μ/g
s/\\mu/μ/g
s/௡/®/g
s/␧/ε/g
s/␨/ζ/g
s/␹/X/g
s/␣/α/g
s/␤/β/g
s/␦/δ/g
s/þ/+/g
s/¼/=/g
s/ϭ/=/g
s/Ͻ/</g
s/Ͼ/>/g
s/␥/γ/g
s/Ϫ/-/g
s/—/ - /g
s/ ‫؍‬ ./=/g
s/Ն/≥/g
s/Ն/≤/g
s/ϳ/~/g
s/Յ/+/g
s/Ã/*/g
s/Â/x/g
s/Á/./g
s/À/-/g
s//=/g
s/¥/x/g
s///g
s/™//g
s/®//g
s/–/-/g
s/Ϯ/±/g
s/؉/+/g
s/ϫ/x/g
s/ϩ/+/g
s/—/-/g
s/−/-/g
s/؊/-/g
s/…/.../g
s/ϩ/+/g
s//~/g
s/ϫ/x/g
s/€/a/g
s/Mcintosh/McIntosh/g
s/⇓//g
# s/→/>/g
# s/\~a/ã/g
s/\\~o/õ/g

s/&quot;/"/g
s/&apos;/'/g
s/&amp;/\&/g
s/\\mathcal//g
s/\\alpha/α/g
s/\\beta/β/g
s/\\delta/δ/g
s/\\ell/L/g
s/\\lambda/λ/g
s/\\^i/î/g
s/\\"i/ï/g
s/\\=o/ō/g
s/\\rho/ρ/g
s/\\sigma/σ/g
s/\\Sigma/Σ/g
s/\\texttt//g
s/\\e/è/g
s/\\E/È/g
s/\\'a/á/g
s/\\infty/∞/g
# ----------------------------------------------------------------------------
# Terminal: need to triple \\\ escape sed expressions applied over \-escaped text in arxiv output, e.g.:
#   echo "Using P\'olya-Gamma Augmentation | \nabla" | sed "s/\\\'o/ó/g; s/\\\nabla/∇/g"
# ... whereas in this script: only need to double \\ escape those same expressions; e.g.:
#   's/\\'o/ó/g'                                                                ## e.g.: https://arxiv.org/abs/1910.13052
#   's/\\nabla/∇/g'
s/\\nabla/∇/g
s/\\'o/ó/g
# ----------------------------------------
# Terminal: echo "apple-\'A-banana" | sed "s/\\\'A/Á/g"
# This script (one less \ back slash):
s/\\'A/Á/g
s/\\AE /Æ/g
# ----------------------------------------
# Terminal: echo "apple-\'e-banana" | sed "s/\\\'e/é/g"
# This script (one less \ back slash):
s/\\'e/é/g
s/\\^e/ê/g
s/\\^E/Ê/g
# ----------------------------------------
# Terminal: echo 'apple-\dot{G}-banana' | sed 's/\\\dot{G}/Ġ/g'                 ## e.g.: https://arxiv.org/abs/1908.10725
# This script (one less \ back slash):
s/\\dot{g}/ġ/g
s/\\dot{G}/Ġ/g
# ----------------------------------------------------------------------------
s/\\'i/í/g
s/\\'I/Í/g
s/\\'o/ó/g
s/\\'O/Ó/g
s/\\"o/ö/g
s/\\H/ő/g
s/\\'u/ú/g
s/\\'U/Ú/g
#
s/\\cc/ç/g
# echo 'fran\ccais'
#   fran\ccais
# echo 'fran\ccais' | sed 's/\\cc/ç/g'
#   français
# $ date
#   Tue 14 Jan 2020 08:52:32 AM PST
# Tests:
# $ sed -f sed_characters arxiv-filtered | grep fran
#   Représentations lexicales pour la détection non supervisée d'événements dans un flux de tweets : étude sur des corpus français et anglais. https://arxiv.org/abs/2001.04139
# $ sed -f sed_characters arxiv-filtered > zzz
# $ cat zzz | grep fran
#   Représentations lexicales pour la détection non supervisée d'événements dans un flux de tweets : étude sur des corpus français et anglais. https://arxiv.org/abs/2001.04139
#
s/\\~a/ã/g
s/\\`//g
s/\\dot//g
s/\\vert/|/g
s/_{{X}}/ᵪ/g

s/\$//g                                                                         ## Removing $ breaks LaTeX code (so don't use this list, for other purposes)! :-o
s/{//g
s/}//g
# s/\{//g
# s/}//g
s/\\textit//g

